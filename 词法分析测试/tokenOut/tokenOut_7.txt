#Errors: 2
at line 7, column 24: 非法字符 "||"
at line 52, column 32: 非法字符 ">"
#Token: 
#line 1
KEYWORD class
IDENTIFIER WhatHappen
SYMBOL {
#line 2
KEYWORD public
KEYWORD static
KEYWORD void
KEYWORD main
SYMBOL (
KEYWORD String
SYMBOL [
SYMBOL ]
IDENTIFIER args
SYMBOL )
SYMBOL {
#line 3
IDENTIFIER MyClient
IDENTIFIER mc
SYMBOL ;
#line 4
KEYWORD int
IDENTIFIER handle
SYMBOL ;
#line 5
#line 6
IDENTIFIER mc
SYMBOL =
KEYWORD new
IDENTIFIER MyClient
SYMBOL (
SYMBOL )
SYMBOL ;
#line 7
KEYWORD while
SYMBOL (
SYMBOL !
KEYWORD false
KEYWORD true
SYMBOL )
SYMBOL {
#line 8
IDENTIFIER handle
SYMBOL =
IDENTIFIER mc
SYMBOL .
IDENTIFIER start
SYMBOL (
INTEGER 10
SYMBOL ,
INTEGER 10
SYMBOL )
SYMBOL ;
#line 9
SYMBOL }
#line 10
SYMBOL }
#line 11
SYMBOL }
#line 12
#line 13
KEYWORD class
IDENTIFIER Client
SYMBOL {
#line 14
KEYWORD int
IDENTIFIER in
SYMBOL ;
#line 15
KEYWORD int
IDENTIFIER out
SYMBOL ;
#line 16
KEYWORD int
SYMBOL [
SYMBOL ]
IDENTIFIER messagelist
SYMBOL ;
#line 17
KEYWORD int
IDENTIFIER index
SYMBOL ;
#line 18
KEYWORD public
KEYWORD boolean
IDENTIFIER init
SYMBOL (
SYMBOL )
SYMBOL {
#line 19
IDENTIFIER index
SYMBOL =
INTEGER 0
SYMBOL ;
#line 20
IDENTIFIER messagelist
SYMBOL =
KEYWORD new
KEYWORD int
SYMBOL [
INTEGER 10
SYMBOL ]
SYMBOL ;
#line 21
IDENTIFIER in
SYMBOL =
INTEGER 0
SYMBOL ;
#line 22
IDENTIFIER out
SYMBOL =
INTEGER 0
SYMBOL ;
#line 23
KEYWORD return
KEYWORD true
SYMBOL ;
#line 24
SYMBOL }
#line 25
KEYWORD public
KEYWORD int
IDENTIFIER run
SYMBOL (
KEYWORD int
IDENTIFIER host
SYMBOL ,
KEYWORD int
IDENTIFIER port
SYMBOL )
SYMBOL {
#line 26
KEYWORD int
IDENTIFIER handle
SYMBOL ;
#line 27
IDENTIFIER handle
SYMBOL =
KEYWORD this
SYMBOL .
IDENTIFIER Juggling
SYMBOL (
SYMBOL )
SYMBOL ;
#line 28
#line 29
SYMBOL }
#line 30
#line 31
KEYWORD public
KEYWORD int
IDENTIFIER getMsg
SYMBOL (
SYMBOL )
SYMBOL {
#line 32
KEYWORD int
IDENTIFIER tmp
SYMBOL ;
#line 33
IDENTIFIER tmp
SYMBOL =
IDENTIFIER messagelist
SYMBOL .
KEYWORD length
SYMBOL ;
#line 34
KEYWORD if
SYMBOL (
KEYWORD this
SYMBOL .
IDENTIFIER isVoid
SYMBOL (
SYMBOL )
SYMBOL )
SYMBOL {
#line 35
IDENTIFIER tmp
SYMBOL =
IDENTIFIER tmp
SYMBOL -
INTEGER 1
SYMBOL ;
#line 36
SYMBOL }
#line 37
KEYWORD else
SYMBOL {
#line 38
IDENTIFIER tmp
SYMBOL =
IDENTIFIER tmp
SYMBOL *
INTEGER 2
SYMBOL ;
#line 39
SYMBOL }
#line 40
KEYWORD if
SYMBOL (
IDENTIFIER index
SYMBOL <
INTEGER 10
SYMBOL )
SYMBOL {
#line 41
IDENTIFIER messagelist
SYMBOL [
IDENTIFIER index
SYMBOL ]
SYMBOL =
IDENTIFIER tmp
SYMBOL ;
#line 42
IDENTIFIER index
SYMBOL =
IDENTIFIER index
SYMBOL +
INTEGER 1
SYMBOL ;
#line 43
SYMBOL }
#line 44
KEYWORD else
SYMBOL {
#line 45
IDENTIFIER index
SYMBOL =
INTEGER 0
SYMBOL ;
#line 46
SYMBOL }
#line 47
KEYWORD return
IDENTIFIER tmp
SYMBOL ;
#line 48
SYMBOL }
#line 49
#line 50
KEYWORD public
KEYWORD boolean
IDENTIFIER isVoid
SYMBOL (
SYMBOL )
SYMBOL {
#line 51
KEYWORD boolean
IDENTIFIER flag
SYMBOL ;
#line 52
KEYWORD if
SYMBOL (
IDENTIFIER messagelist
SYMBOL .
KEYWORD length
INTEGER 0
SYMBOL )
SYMBOL {
#line 53
IDENTIFIER flag
SYMBOL =
KEYWORD false
SYMBOL ;
#line 54
SYMBOL }
#line 55
KEYWORD else
SYMBOL {
#line 56
IDENTIFIER flag
SYMBOL =
KEYWORD true
SYMBOL ;
#line 57
SYMBOL }
#line 58
KEYWORD return
IDENTIFIER flag
SYMBOL ;
#line 59
SYMBOL }
#line 60
#line 61
KEYWORD public
KEYWORD int
IDENTIFIER Juggling
SYMBOL (
SYMBOL )
SYMBOL {
#line 62
KEYWORD boolean
IDENTIFIER t
SYMBOL ;
#line 63
KEYWORD int
IDENTIFIER tmp1
SYMBOL ;
#line 64
KEYWORD int
IDENTIFIER tmp2
SYMBOL ;
#line 65
KEYWORD int
IDENTIFIER tmp3
SYMBOL ;
#line 66
IDENTIFIER tmp1
SYMBOL =
INTEGER 2
SYMBOL ;
#line 67
IDENTIFIER tmp2
SYMBOL =
INTEGER 3
SYMBOL ;
#line 68
IDENTIFIER tmp3
SYMBOL =
INTEGER 4
SYMBOL ;
#line 69
KEYWORD while
SYMBOL (
SYMBOL (
IDENTIFIER tmp2
SYMBOL <
IDENTIFIER tmp3
SYMBOL )
SYMBOL &&
SYMBOL (
IDENTIFIER tmp1
SYMBOL <
IDENTIFIER tmp2
SYMBOL )
SYMBOL )
SYMBOL {
#line 70
IDENTIFIER tmp1
SYMBOL =
IDENTIFIER tmp3
SYMBOL -
IDENTIFIER tmp2
SYMBOL ;
#line 71
IDENTIFIER tmp2
SYMBOL =
IDENTIFIER tmp2
SYMBOL -
IDENTIFIER tmp1
SYMBOL ;
#line 72
IDENTIFIER tmp3
SYMBOL =
IDENTIFIER tmp2
SYMBOL *
IDENTIFIER tmp1
SYMBOL ;
#line 73
IDENTIFIER t
SYMBOL =
KEYWORD this
SYMBOL .
IDENTIFIER HolyLight
SYMBOL (
SYMBOL )
SYMBOL ;
#line 74
SYMBOL }
#line 75
KEYWORD return
SYMBOL (
IDENTIFIER tmp1
SYMBOL *
IDENTIFIER tmp2
SYMBOL +
IDENTIFIER tmp3
SYMBOL )
SYMBOL *
IDENTIFIER messagelist
SYMBOL .
KEYWORD length
SYMBOL ;
#line 76
SYMBOL }
#line 77
#line 78
#line 79
KEYWORD public
KEYWORD boolean
IDENTIFIER HolyLight
SYMBOL (
SYMBOL )
SYMBOL {
#line 80
IDENTIFIER in
SYMBOL =
IDENTIFIER in
SYMBOL +
INTEGER 1
SYMBOL ;
#line 81
IDENTIFIER out
SYMBOL =
IDENTIFIER out
SYMBOL -
INTEGER 1
SYMBOL ;
#line 82
KEYWORD System.out.println
SYMBOL (
KEYWORD false
SYMBOL )
SYMBOL ;
#line 83
SYMBOL }
#line 84
SYMBOL }
#line 85
#line 86
KEYWORD class
IDENTIFIER MyClient
IDENTIFIER extend
IDENTIFIER Client
SYMBOL {
#line 87
#line 88
KEYWORD public
KEYWORD int
IDENTIFIER start
SYMBOL (
KEYWORD int
IDENTIFIER host
SYMBOL ,
KEYWORD int
IDENTIFIER port
SYMBOL )
SYMBOL {
#line 89
KEYWORD int
IDENTIFIER handle
SYMBOL ;
#line 90
IDENTIFIER handle
SYMBOL =
KEYWORD this
SYMBOL .
IDENTIFIER run
SYMBOL (
SYMBOL )
#line 91
KEYWORD return
IDENTIFIER handle
SYMBOL ;
#line 92
SYMBOL }
#line 93
SYMBOL }
#line 94
